Pop.grid.Events=function(e){e=e||{},Ext.applyIf(e,{id:"pop-grid-events",url:Pop.config.connectorUrl,baseParams:{action:"mgr/events/popEventGetList"},fields:["id","name","default_inv_markup","default_tax","active"],paging:!0,remoteSort:!0,sortBy:"name",anchor:"97%",autoExpandColumn:"name",save_action:"mgr/events/popEventUpdateFromGrid",autosave:!0,columns:[{header:_("pop.id"),hidden:!0,dataIndex:"id",name:"id"},{header:_("pop.name"),dataIndex:"name",name:"name",sortable:!0,width:100,editor:{xtype:"textfield"}},{header:_("pop.markup"),dataIndex:"default_inv_markup",name:"default_inv_markup",sortable:!0,width:100,editor:{xtype:"numberfield",decimalPrecision:1,maxValue:999.9,minValue:0,allowBlank:!1,qtip:_("pop.default_inv_markup_qtip")}},{header:_("pop.tax"),dataIndex:"default_tax",name:"default_tax",sortable:!0,width:100,editor:{xtype:"numberfield",decimalPrecision:1,maxValue:999.9,minValue:0,allowBlank:!1,qtip:_("pop.default_tax_qtip")}},{header:_("pop.active"),dataIndex:"active",sortable:!0,width:50,editor:{xtype:"pop-combo-active-status",id:"pop-combo-active-event",renderer:!0}}],tbar:[{xtype:"button",id:"pop-create-event-button",text:_("pop.create_event"),handler:{xtype:"pop-window-event-create",blankValues:!0}},{xtype:"button",id:"pop-update-event-button",text:_("pop.update"),listeners:{click:{fn:this.updateEvent,scope:this}}},{xtype:"button",id:"pop-event-active-toggle-button",text:_("pop.toggle_active"),handler:function(e,t){this.toggleActive(e,t)},scope:this},"->",{xtype:"textfield",id:"event-search-filter",emptyText:_("pop.search..."),listeners:{change:{fn:this.search,scope:this},render:{fn:function(e){new Ext.KeyMap(e.getEl(),{key:Ext.EventObject.ENTER,fn:function(){return this.fireEvent("change",this),this.blur(),!0},scope:e})},scope:this}}},{xtype:"button",id:"clear-event-search",text:_("pop.clear_search"),listeners:{click:{fn:this.clearSearch,scope:this}}}]}),Pop.grid.Events.superclass.constructor.call(this,e)},Ext.extend(Pop.grid.Events,MODx.grid.Grid,{search:function(e,t,a){var n=this.getStore();n.baseParams.query=e.getValue(),this.getBottomToolbar().changePage(1),this.refresh()},clearSearch:function(){this.getStore().baseParams={action:"mgr/events/popEventGetList"},Ext.getCmp("event-search-filter").reset(),this.getBottomToolbar().changePage(1),this.refresh()},getMenu:function(){return[{text:_("pop.update"),handler:this.updateEvent},"-",{text:_("pop.toggle_active"),handler:this.toggleActive}]},updateEvent:function(e,t){var a=this.getSelectionModel().getSelected();return a.length<=0?!1:(this.updateEventWindow||(this.updateEventWindow=MODx.load({xtype:"pop-window-event-update",record:a.data,listeners:{success:{fn:function(e){this.refresh(),this.getSelectionModel().clearSelections(!0)},scope:this}}})),this.updateEventWindow.setValues(a.data),void this.updateEventWindow.show(t.target))},toggleActive:function(e,t){var a=this.getSelectionModel().getSelected();return a.length<=0?!1:(MODx.Ajax.request({url:this.config.url,params:{action:"mgr/events/popEventUpdate",id:a.data.id,toggleActive:1},listeners:{success:{fn:function(e){this.refresh(),Ext.getCmp("pop-grid-events").refresh()},scope:this}}}),!0)}}),Ext.reg("pop-grid-events",Pop.grid.Events),Pop.window.CreateEvent=function(e){e=e||{},Ext.applyIf(e,{title:_("pop.create_event"),width:"400",url:Pop.config.connectorUrl,labelAlign:"left",baseParams:{action:"mgr/events/popEventCreate"},fields:[{xtype:"textfield",fieldLabel:_("pop.event"),name:"name",allowBlank:!1,anchor:"100%"},{xtype:"numberfield",fieldLabel:_("pop.default_inv_markup"),name:"default_inv_markup",anchor:"100%",decimalPrecision:1,maxValue:999.9,minValue:0,value:MODx.config.pop_default_inv_markup,allowBlank:!1,qtip:_("pop.default_inv_markup_qtip")},{xtype:"numberfield",fieldLabel:_("pop.default_tax"),name:"default_tax",anchor:"100%",decimalPrecision:1,maxValue:999.9,minValue:0,value:MODx.config.pop_default_tax,allowBlank:!1,qtip:_("pop.default_tax_qtip")},{xtype:"pop-combo-active-status",fieldLabel:_("pop.active"),name:"active",value:1,hiddenName:"active",hiddenValue:1,anchor:"100%"}]}),Pop.window.CreateEvent.superclass.constructor.call(this,e)},Ext.extend(Pop.window.CreateEvent,MODx.Window),Ext.reg("pop-window-event-create",Pop.window.CreateEvent),Pop.window.UpdateEvent=function(e){e=e||{},Ext.applyIf(e,{title:_("pop.update_event"),width:"400",url:Pop.config.connectorUrl,labelAlign:"left",baseParams:{action:"mgr/events/popEventUpdate"},fields:[{xtype:"hidden",name:"id"},{xtype:"textfield",fieldLabel:_("pop.event"),name:"name",allowBlank:!1,anchor:"100%"},{xtype:"numberfield",fieldLabel:_("pop.default_inv_markup"),name:"default_inv_markup",anchor:"100%",decimalPrecision:1,maxValue:999.9,minValue:0,allowBlank:!1,qtip:_("pop.default_inv_markup_qtip")},{xtype:"numberfield",fieldLabel:_("pop.default_tax"),name:"default_tax",anchor:"100%",decimalPrecision:1,maxValue:999.9,minValue:0,allowBlank:!1,qtip:_("pop.default_tax_qtip")},{xtype:"pop-combo-active-status",fieldLabel:_("pop.active"),name:"active",hiddenName:"active",anchor:"100%"}]}),Pop.window.UpdateEvent.superclass.constructor.call(this,e)},Ext.extend(Pop.window.UpdateEvent,MODx.Window),Ext.reg("pop-window-event-update",Pop.window.UpdateEvent);