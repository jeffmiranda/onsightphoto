var Pop=function(o){o=o||{},Pop.superclass.constructor.call(this,o)};Ext.extend(Pop,Ext.Component,{page:{},window:{},grid:{},tree:{},container:{},panel:{},combo:{},config:{},tabs:{},store:{},toolbar:{}}),Ext.reg("pop",Pop),Pop=new Pop,Pop.combo.ActiveStatus=function(o){o=o||{},Ext.applyIf(o,{store:new Ext.data.ArrayStore({fields:["value","display"],data:[[1,"Yes"],[0,"No"]]}),mode:"local",displayField:"display",valueField:"value"}),Pop.combo.ActiveStatus.superclass.constructor.call(this,o)},Ext.extend(Pop.combo.ActiveStatus,MODx.combo.ComboBox),Ext.reg("pop-combo-active-status",Pop.combo.ActiveStatus),Ext.override(Ext.form.Field,{afterRender:Ext.form.Field.prototype.afterRender.createSequence(function(){var o=this.qtip;o&&Ext.QuickTips.register({target:this,title:"",text:o,enabled:!0,showDelay:20})})}),Pop.combo.Events=function(o){o=o||{},Ext.applyIf(o,{emptyText:_("pop.select..."),fieldLabel:_("pop.event"),typeAhead:!0,valueField:"id",displayField:"name",fields:["id","name"],url:Pop.config.connectorUrl,baseParams:{action:"mgr/events/popEventGetList",active:1}}),Pop.combo.Events.superclass.constructor.call(this,o)},Ext.extend(Pop.combo.Events,MODx.combo.ComboBox),Ext.reg("pop-combo-events",Pop.combo.Events),Pop.combo.EventGroups=function(o){o=o||{},Ext.applyIf(o,{emptyText:_("pop.select..."),fieldLabel:_("pop.event_group"),typeAhead:!0,allowBlank:!0,emptyText:"",valueField:"id",displayField:"name",fields:["id","name"],url:Pop.config.connectorUrl,baseParams:{action:"mgr/events/popEventGroupGetList",active:1}}),Pop.combo.EventGroups.superclass.constructor.call(this,o)},Ext.extend(Pop.combo.EventGroups,MODx.combo.ComboBox),Ext.reg("pop-combo-event-groups",Pop.combo.EventGroups);